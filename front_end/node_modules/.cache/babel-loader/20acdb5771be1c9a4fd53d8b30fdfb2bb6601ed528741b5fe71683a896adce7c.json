{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/survey/SurveyCreator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyCreator = ({\n  onAddSurvey\n}) => {\n  _s();\n  const [surveyTitle, setSurveyTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    questionText: '',\n    type: 'radio',\n    options: ['', '']\n  }]);\n  const [deadline, setDeadline] = useState('');\n  const [error, setError] = useState(null);\n  const handleTitleChange = e => {\n    setSurveyTitle(e.target.value);\n  };\n  const handleDeadlineChange = e => {\n    setDeadline(e.target.value);\n  };\n  const handleQuestionChange = (index, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index].questionText = value;\n    setQuestions(newQuestions);\n  };\n  const handleOptionChange = (qIndex, oIndex, value) => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options[oIndex] = value;\n    setQuestions(newQuestions);\n  };\n  const handleQuestionTypeChange = (index, type) => {\n    const newQuestions = [...questions];\n    newQuestions[index].type = type;\n    if (type === 'text') {\n      delete newQuestions[index].options;\n    } else {\n      newQuestions[index].options = ['', ''];\n    }\n    setQuestions(newQuestions);\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      questionText: '',\n      type: 'radio',\n      options: ['', '']\n    }]);\n  };\n  const addOption = qIndex => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options.push('');\n    setQuestions(newQuestions);\n  };\n  const handleSubmit = () => {\n    if (!surveyTitle.trim()) {\n      setError('Le titre du sondage ne peut pas être vide.');\n      return;\n    }\n    if (!deadline.trim()) {\n      setError('La date limite de vote ne peut pas être vide.');\n      return;\n    }\n    if (new Date(deadline) < new Date()) {\n      setError('La date limite de vote doit être dans le futur.');\n      return;\n    }\n    for (const question of questions) {\n      if (!question.questionText.trim()) {\n        setError('Toutes les questions doivent avoir un texte.');\n        return;\n      }\n      if (question.type === 'radio') {\n        if (question.options.length < 2) {\n          setError('Les questions de type radio doivent avoir au moins 2 options.');\n          return;\n        }\n        for (const option of question.options) {\n          if (!option.trim()) {\n            setError('Toutes les options doivent avoir un texte.');\n            return;\n          }\n        }\n      }\n    }\n    setError(null);\n    onAddSurvey({\n      title: surveyTitle,\n      questions,\n      deadline\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er un sondage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: surveyTitle,\n      onChange: handleTitleChange,\n      placeholder: \"Titre du sondage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      value: deadline,\n      onChange: handleDeadlineChange,\n      placeholder: \"Date limite de vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.questionText,\n        onChange: e => handleQuestionChange(qIndex, e.target.value),\n        placeholder: `Question ${qIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), question.type === 'radio' && question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: option,\n        onChange: e => handleOptionChange(qIndex, oIndex, e.target.value),\n        placeholder: `Option ${oIndex + 1}`\n      }, oIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addQuestion,\n      children: \"Ajouter une question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Soumettre le sondage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyCreator, \"C+4WEZBA6e+Ve3zQIlTW8Mdw5J8=\");\n_c = SurveyCreator;\nexport default SurveyCreator;\nvar _c;\n$RefreshReg$(_c, \"SurveyCreator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SurveyCreator","onAddSurvey","_s","surveyTitle","setSurveyTitle","questions","setQuestions","questionText","type","options","deadline","setDeadline","error","setError","handleTitleChange","e","target","value","handleDeadlineChange","handleQuestionChange","index","newQuestions","handleOptionChange","qIndex","oIndex","handleQuestionTypeChange","addQuestion","addOption","push","handleSubmit","trim","Date","question","length","option","title","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onChange","placeholder","map","onClick","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/survey/SurveyCreator.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface SurveyQuestion {\n  questionText: string;\n  options?: string[];\n  type: 'radio' | 'text';\n}\n\ninterface SurveyCreatorProps {\n  onAddSurvey: (survey: { title: string; questions: SurveyQuestion[], deadline: string }) => void;\n}\n\nconst SurveyCreator: React.FC<SurveyCreatorProps> = ({ onAddSurvey }) => {\n  const [surveyTitle, setSurveyTitle] = useState('');\n  const [questions, setQuestions] = useState<SurveyQuestion[]>([{ questionText: '', type: 'radio', options: ['', ''] }]);\n  const [deadline, setDeadline] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSurveyTitle(e.target.value);\n  };\n\n  const handleDeadlineChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeadline(e.target.value);\n  };\n\n  const handleQuestionChange = (index: number, value: string) => {\n    const newQuestions = [...questions];\n    newQuestions[index].questionText = value;\n    setQuestions(newQuestions);\n  };\n\n  const handleOptionChange = (qIndex: number, oIndex: number, value: string) => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options![oIndex] = value;\n    setQuestions(newQuestions);\n  };\n\n  const handleQuestionTypeChange = (index: number, type: 'radio' | 'text') => {\n    const newQuestions = [...questions];\n    newQuestions[index].type = type;\n    if (type === 'text') {\n      delete newQuestions[index].options;\n    } else {\n      newQuestions[index].options = ['', ''];\n    }\n    setQuestions(newQuestions);\n  };\n\n  const addQuestion = () => {\n    setQuestions([...questions, { questionText: '', type: 'radio', options: ['', ''] }]);\n  };\n\n  const addOption = (qIndex: number) => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options!.push('');\n    setQuestions(newQuestions);\n  };\n\n  const handleSubmit = () => {\n    if (!surveyTitle.trim()) {\n      setError('Le titre du sondage ne peut pas être vide.');\n      return;\n    }\n    if (!deadline.trim()) {\n      setError('La date limite de vote ne peut pas être vide.');\n      return;\n    }\n    if (new Date(deadline) < new Date()) {\n      setError('La date limite de vote doit être dans le futur.');\n      return;\n    }\n    for (const question of questions) {\n      if (!question.questionText.trim()) {\n        setError('Toutes les questions doivent avoir un texte.');\n        return;\n      }\n      if (question.type === 'radio') {\n        if (question.options!.length < 2) {\n          setError('Les questions de type radio doivent avoir au moins 2 options.');\n          return;\n        }\n        for (const option of question.options!) {\n          if (!option.trim()) {\n            setError('Toutes les options doivent avoir un texte.');\n            return;\n          }\n        }\n      }\n    }\n    setError(null);\n    onAddSurvey({ title: surveyTitle, questions, deadline });\n  };\n\n  return (\n    <div>\n      <h2>Créer un sondage</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <input type=\"text\" value={surveyTitle} onChange={handleTitleChange} placeholder=\"Titre du sondage\" />\n      <input type=\"datetime-local\" value={deadline} onChange={handleDeadlineChange} placeholder=\"Date limite de vote\" />\n      {questions.map((question, qIndex) => (\n        <div key={qIndex}>\n          <input\n            type=\"text\"\n            value={question.questionText}\n            onChange={(e) => handleQuestionChange(qIndex, e.target.value)}\n            placeholder={`Question ${qIndex + 1}`}\n          />\n          \n        \n          {question.type === 'radio' && question.options!.map((option, oIndex) => (\n            <input\n              key={oIndex}\n              type=\"text\"\n              value={option}\n              onChange={(e) => handleOptionChange(qIndex, oIndex, e.target.value)}\n              placeholder={`Option ${oIndex + 1}`}\n            />\n          ))}\n\n        </div>\n      ))}\n      <button onClick={addQuestion}>Ajouter une question</button>\n      <button onClick={handleSubmit}>Soumettre le sondage</button>\n    </div>\n  );\n};\n\nexport default SurveyCreator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}