{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/bills/Contributions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport '../../styles/home.css';\nimport Modal from './Modal';\nimport logo from \"../../img/header/favicon.svg.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51PdZ5OJR2hyal4ZRgFsePEuUdfqPYa0D6RhfbwzAj1h0RmnItT51bQwwUq4LNb8KrojF1NoiZeHJqJZOYBfTOz7S003JkbkRp6');\nconst DonationForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [amount, setAmount] = useState(null);\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [streetNumber, setStreetNumber] = useState('');\n  const [streetName, setStreetName] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [city, setCity] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [modalMessage, setModalMessage] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setErrors([]);\n    setErrorMessage(null);\n    const newErrors = [];\n    if (!/^[A-Za-zÀ-ÿ\\s'-]+$/.test(name)) newErrors.push('Le nom ne doit contenir que des lettres, des espaces, des tirets ou des apostrophes.');\n    if (!/^[A-Za-zÀ-ÿ\\s'-]+$/.test(surname)) newErrors.push('Le prénom ne doit contenir que des lettres, des espaces, des tirets ou des apostrophes.');\n    if (!/^[A-Za-zÀ-ÿ\\s'-]+$/.test(city)) newErrors.push('La ville ne doit contenir que des lettres, des espaces, des tirets ou des apostrophes.');\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) newErrors.push('L\\'email n\\'est pas valide.');\n    if (!/^\\d{5}$/.test(postalCode)) newErrors.push('Le code postal doit contenir exactement 5 chiffres.');\n    setErrors(newErrors);\n    if (newErrors.length > 0) {\n      setLoading(false);\n      setModalMessage(newErrors.join('\\n'));\n      return;\n    }\n    if (!stripe || !elements) {\n      setErrorMessage('Stripe n\\'est pas correctement configuré.');\n      setLoading(false);\n      setModalMessage('Stripe n\\'est pas correctement configuré.');\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    if (!cardElement) {\n      setErrorMessage('Élément de carte introuvable.');\n      setLoading(false);\n      setModalMessage('Élément de carte introuvable.');\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n      billing_details: {\n        name: name + \" \" + surname,\n        email: email,\n        address: {\n          line1: `${streetNumber} ${streetName}`,\n          postal_code: postalCode,\n          city: city,\n          country: 'FR'\n        }\n      }\n    });\n    if (error) {\n      setErrorMessage('Erreur de création de méthode de paiement : ' + error.message);\n      setLoading(false);\n      setModalMessage('Erreur de création de méthode de paiement : ' + error.message);\n      return;\n    }\n    if (paymentMethod) {\n      try {\n        const response = await fetch('http://localhost:3000/create-payment-intent', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: amount,\n            paymentMethodId: paymentMethod.id\n          })\n        });\n        const paymentResult = await response.json();\n        if (paymentResult.error) {\n          setErrorMessage('Erreur lors de la création de l\\'intention de paiement : ' + paymentResult.error);\n          setModalMessage('Erreur lors de la création de l\\'intention de paiement : ' + paymentResult.error);\n        } else {\n          setSuccessMessage('Paiement réussi ! Redirection...');\n          setModalMessage('Paiement réussi ! Redirection...');\n          setTimeout(() => {\n            window.location.href = '/';\n          }, 3000);\n        }\n      } catch (fetchError) {\n        setErrorMessage('Erreur lors de la requête de paiement');\n        setModalMessage('Erreur lors de la requête de paiement');\n      }\n    }\n    setLoading(false);\n  };\n  const handleAmountClick = selectedAmount => {\n    setAmount(selectedAmount);\n  };\n  const closeModal = () => {\n    setModalMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"donation-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nom\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pr\\xE9nom\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: surname,\n            onChange: e => setSurname(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Num\\xE9ro de rue\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: streetNumber,\n            onChange: e => setStreetNumber(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nom de la voie\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: streetName,\n            onChange: e => setStreetName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Code Postal\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: postalCode,\n            onChange: e => setPostalCode(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ville\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-section\",\n        children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || !amount || loading,\n        children: loading ? 'Chargement...' : `Contribuer à hauteur de 50€`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), modalMessage && /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalMessage,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(DonationForm, \"kQRg8Xf06yEUOBq/mk8yK3ZmGH4=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = DonationForm;\nconst Donation = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"QUE CHOISIR\",\n        className: \"donationLogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contribution annuelle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DonationForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Donation;\nexport default Donation;\nvar _c, _c2;\n$RefreshReg$(_c, \"DonationForm\");\n$RefreshReg$(_c2, \"Donation\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","Modal","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","stripePromise","DonationForm","_s","stripe","elements","amount","setAmount","name","setName","surname","setSurname","email","setEmail","streetNumber","setStreetNumber","streetName","setStreetName","postalCode","setPostalCode","city","setCity","errors","setErrors","loading","setLoading","successMessage","setSuccessMessage","errorMessage","setErrorMessage","modalMessage","setModalMessage","handleSubmit","event","preventDefault","newErrors","test","push","length","join","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","billing_details","address","line1","postal_code","country","message","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","paymentResult","json","setTimeout","window","location","href","fetchError","handleAmountClick","selectedAmount","closeModal","children","onSubmit","className","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClose","_c","Donation","src","alt","_c2","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/bills/Contributions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport '../../styles/home.css';\nimport Modal from './Modal'; \nimport logo from \"../../img/header/favicon.svg.png\";\n\nconst stripePromise = loadStripe('pk_test_51PdZ5OJR2hyal4ZRgFsePEuUdfqPYa0D6RhfbwzAj1h0RmnItT51bQwwUq4LNb8KrojF1NoiZeHJqJZOYBfTOz7S003JkbkRp6');\n\nconst DonationForm: React.FC = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [amount, setAmount] = useState<number | null>(null);\n    const [name, setName] = useState('');\n    const [surname, setSurname] = useState('');\n    const [email, setEmail] = useState('');\n    const [streetNumber, setStreetNumber] = useState('');\n    const [streetName, setStreetName] = useState('');\n    const [postalCode, setPostalCode] = useState('');\n    const [city, setCity] = useState('');\n    const [errors, setErrors] = useState<string[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [successMessage, setSuccessMessage] = useState<string | null>(null);\n    const [errorMessage, setErrorMessage] = useState<string | null>(null);\n    const [modalMessage, setModalMessage] = useState<string | null>(null);\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault();\n        setLoading(true);\n        setErrors([]);\n        setErrorMessage(null);\n\n        const newErrors: string[] = [];\n\n        if (!/^[A-Za-zÀ-ÿ\\s'-]+$/.test(name)) newErrors.push('Le nom ne doit contenir que des lettres, des espaces, des tirets ou des apostrophes.');\n        if (!/^[A-Za-zÀ-ÿ\\s'-]+$/.test(surname)) newErrors.push('Le prénom ne doit contenir que des lettres, des espaces, des tirets ou des apostrophes.');\n        if (!/^[A-Za-zÀ-ÿ\\s'-]+$/.test(city)) newErrors.push('La ville ne doit contenir que des lettres, des espaces, des tirets ou des apostrophes.');\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) newErrors.push('L\\'email n\\'est pas valide.');\n        if (!/^\\d{5}$/.test(postalCode)) newErrors.push('Le code postal doit contenir exactement 5 chiffres.');\n\n        setErrors(newErrors);\n\n        if (newErrors.length > 0) {\n            setLoading(false);\n            setModalMessage(newErrors.join('\\n'));\n            return;\n        }\n\n        if (!stripe || !elements) {\n            setErrorMessage('Stripe n\\'est pas correctement configuré.');\n            setLoading(false);\n            setModalMessage('Stripe n\\'est pas correctement configuré.');\n            return;\n        }\n\n        const cardElement = elements.getElement(CardElement);\n\n        if (!cardElement) {\n            setErrorMessage('Élément de carte introuvable.');\n            setLoading(false);\n            setModalMessage('Élément de carte introuvable.');\n            return;\n        }\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: cardElement,\n            billing_details: {\n                name: name + \" \" + surname,\n                email: email,\n                address: {\n                    line1: `${streetNumber} ${streetName}`,\n                    postal_code: postalCode,\n                    city: city,\n                    country: 'FR',\n                },\n            },\n        });\n\n        if (error) {\n            setErrorMessage('Erreur de création de méthode de paiement : ' + error.message);\n            setLoading(false);\n            setModalMessage('Erreur de création de méthode de paiement : ' + error.message);\n            return;\n        }\n\n        if (paymentMethod) {\n            try {\n                const response = await fetch('http://localhost:3000/create-payment-intent', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        amount: amount,\n                        paymentMethodId: paymentMethod.id,\n                    }),\n                });\n\n                const paymentResult = await response.json();\n                if (paymentResult.error) {\n                    setErrorMessage('Erreur lors de la création de l\\'intention de paiement : ' + paymentResult.error);\n                    setModalMessage('Erreur lors de la création de l\\'intention de paiement : ' + paymentResult.error);\n                } else {\n                    setSuccessMessage('Paiement réussi ! Redirection...');\n                    setModalMessage('Paiement réussi ! Redirection...');\n                    setTimeout(() => {\n                        window.location.href = '/';\n                    }, 3000);  \n                }\n            } catch (fetchError) {\n                setErrorMessage('Erreur lors de la requête de paiement');\n                setModalMessage('Erreur lors de la requête de paiement');\n            }\n        }\n\n        setLoading(false);\n    };\n\n    const handleAmountClick = (selectedAmount: number) => {\n        setAmount(selectedAmount);\n    };\n\n    const closeModal = () => {\n        setModalMessage(null);\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} className=\"donation-form\">\n                <div className=\"info-section\">\n                    <label>\n                        Nom\n                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\n                    </label>\n                    <label>\n                        Prénom\n                        <input type=\"text\" value={surname} onChange={(e) => setSurname(e.target.value)} required />\n                    </label>\n                    <label>\n                        Email\n                        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                    </label>\n                    <label>\n                        Numéro de rue\n                        <input type=\"text\" value={streetNumber} onChange={(e) => setStreetNumber(e.target.value)} required />\n                    </label>\n                    <label>\n                        Nom de la voie\n                        <input type=\"text\" value={streetName} onChange={(e) => setStreetName(e.target.value)} required />\n                    </label>\n                    <label>\n                        Code Postal\n                        <input type=\"text\" value={postalCode} onChange={(e) => setPostalCode(e.target.value)} required />\n                    </label>\n                    <label>\n                        Ville\n                        <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} required />\n                    </label>\n                </div>\n                <div className=\"payment-section\">\n                    <CardElement />\n                </div>\n                <button type=\"submit\" disabled={!stripe || !amount || loading}>\n                    {loading ? 'Chargement...' : `Contribuer à hauteur de 50€`}\n                </button>\n            </form>\n            {modalMessage && (\n                <Modal message={modalMessage} onClose={closeModal} />\n            )}\n        </>\n    );\n};\n\nconst Donation: React.FC = () => {\n    return (\n        <Elements stripe={stripePromise}>\n            <div className=\"donation-container\">\n                <img src={logo} alt=\"QUE CHOISIR\" className=\"donationLogo\"/>\n                <h1>Contribution annuelle</h1>\n                <DonationForm />\n            </div>\n        </Elements>\n    );\n};\n\nexport default Donation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}