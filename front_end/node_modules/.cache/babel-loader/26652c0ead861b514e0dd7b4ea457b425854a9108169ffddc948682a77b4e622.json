{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/vote/VoteResponse.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoteResults = ({\n  vote,\n  responses\n}) => {\n  const countResponses = (questionIndex, optionText) => {\n    return responses.reduce((count, response) => {\n      return count + (response.responses[questionIndex] === optionText ? 1 : 0);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"R\\xE9sultats pour: \", vote.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Modalit\\xE9 de vote: \", vote.mode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), vote.comment && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Commentaire: \", vote.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }, this), vote.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [option.text, \": \", countResponses(qIndex, option.text)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = VoteResults;\nexport default VoteResults;\nvar _c;\n$RefreshReg$(_c, \"VoteResults\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VoteResults","vote","responses","countResponses","questionIndex","optionText","reduce","count","response","children","title","fileName","_jsxFileName","lineNumber","columnNumber","mode","comment","questions","map","question","qIndex","questionText","options","option","text","id","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/vote/VoteResponse.tsx"],"sourcesContent":["import React from 'react';\n\ninterface VoteQuestion {\n  questionText: string;\n  options: { id: number, text: string }[];\n}\n\ninterface Vote {\n  id: number;\n  title: string;\n  questions: VoteQuestion[];\n  mode: string;\n  comment?: string;\n}\n\ninterface VoteResponse {\n  responses: string[];\n}\n\ninterface VoteResultsProps {\n  vote: Vote;\n  responses: VoteResponse[];\n}\n\nconst VoteResults: React.FC<VoteResultsProps> = ({ vote, responses }) => {\n  const countResponses = (questionIndex: number, optionText: string) => {\n    return responses.reduce((count, response) => {\n      return count + (response.responses[questionIndex] === optionText ? 1 : 0);\n    }, 0);\n  };\n\n  return (\n    <div>\n      <h2>Résultats pour: {vote.title}</h2>\n      <p>Modalité de vote: {vote.mode}</p>\n      {vote.comment && <p>Commentaire: {vote.comment}</p>}\n      {vote.questions.map((question, qIndex) => (\n        <div key={qIndex}>\n          <h4>{question.questionText}</h4>\n          <ul>\n            {question.options.map((option) => (\n              <li key={option.id}>\n                {option.text}: {countResponses(qIndex, option.text)}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VoteResults;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAwB1B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EACvE,MAAMC,cAAc,GAAGA,CAACC,aAAqB,EAAEC,UAAkB,KAAK;IACpE,OAAOH,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAK;MAC3C,OAAOD,KAAK,IAAIC,QAAQ,CAACN,SAAS,CAACE,aAAa,CAAC,KAAKC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3E,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAI,qBAAgB,EAACR,IAAI,CAACS,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCf,OAAA;MAAAU,QAAA,GAAG,uBAAkB,EAACR,IAAI,CAACc,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnCb,IAAI,CAACe,OAAO,iBAAIjB,OAAA;MAAAU,QAAA,GAAG,eAAa,EAACR,IAAI,CAACe,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClDb,IAAI,CAACgB,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,MAAM,kBACnCrB,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAKU,QAAQ,CAACE;MAAY;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCf,OAAA;QAAAU,QAAA,EACGU,QAAQ,CAACG,OAAO,CAACJ,GAAG,CAAEK,MAAM,iBAC3BxB,OAAA;UAAAU,QAAA,GACGc,MAAM,CAACC,IAAI,EAAC,IAAE,EAACrB,cAAc,CAACiB,MAAM,EAAEG,MAAM,CAACC,IAAI,CAAC;QAAA,GAD5CD,MAAM,CAACE,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GARGM,MAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASX,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACY,EAAA,GA1BI1B,WAAuC;AA4B7C,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}