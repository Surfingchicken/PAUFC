{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/survey/SurveyResults.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyResults = ({\n  survey,\n  responses\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"R\\xE9sultats pour: \", survey.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), survey.questions.map((question, qIndex) => {\n      var _question$options;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [question.type === 'radio' && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [option, \": \", responses.filter(response => response[qIndex] === option).length]\n          }, oIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), question.type === 'text' && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: responses.map((response, rIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: response[qIndex]\n          }, rIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = SurveyResults;\nexport default SurveyResults;\nvar _c;\n$RefreshReg$(_c, \"SurveyResults\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SurveyResults","survey","responses","children","title","fileName","_jsxFileName","lineNumber","columnNumber","questions","map","question","qIndex","_question$options","type","options","option","oIndex","filter","response","length","rIndex","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/survey/SurveyResults.tsx"],"sourcesContent":["import React from 'react';\n\ninterface SurveyQuestion {\n  questionText: string;\n  options?: string[];\n  type: 'radio' | 'text';\n}\n\ninterface Survey {\n  id: number;\n  title: string;\n  questions: SurveyQuestion[];\n}\n\ninterface SurveyResultsProps {\n  survey: Survey;\n  responses: string[][];\n}\n\nconst SurveyResults: React.FC<SurveyResultsProps> = ({ survey, responses }) => {\n  return (\n    <div>\n      <h3>RÃ©sultats pour: {survey.title}</h3>\n      {survey.questions.map((question, qIndex) => (\n        <div key={qIndex}> \n          {question.type === 'radio' && (\n            <ul>\n              {question.options?.map((option, oIndex) => (\n                <li key={oIndex}>\n                  {option}: {responses.filter(response => response[qIndex] === option).length}\n                </li>\n              ))}\n            </ul>\n          )}\n          {question.type === 'text' && (\n            <ul>\n              {responses.map((response, rIndex) => (\n                <li key={rIndex}>{response[qIndex]}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SurveyResults;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmB1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAC7E,oBACEH,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,GAAI,qBAAgB,EAACF,MAAM,CAACG,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtCP,MAAM,CAACQ,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,MAAM;MAAA,IAAAC,iBAAA;MAAA,oBACrCd,OAAA;QAAAI,QAAA,GACGQ,QAAQ,CAACG,IAAI,KAAK,OAAO,iBACxBf,OAAA;UAAAI,QAAA,GAAAU,iBAAA,GACGF,QAAQ,CAACI,OAAO,cAAAF,iBAAA,uBAAhBA,iBAAA,CAAkBH,GAAG,CAAC,CAACM,MAAM,EAAEC,MAAM,kBACpClB,OAAA;YAAAI,QAAA,GACGa,MAAM,EAAC,IAAE,EAACd,SAAS,CAACgB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACP,MAAM,CAAC,KAAKI,MAAM,CAAC,CAACI,MAAM;UAAA,GADpEH,MAAM;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEX,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL,EACAG,QAAQ,CAACG,IAAI,KAAK,MAAM,iBACvBf,OAAA;UAAAI,QAAA,EACGD,SAAS,CAACQ,GAAG,CAAC,CAACS,QAAQ,EAAEE,MAAM,kBAC9BtB,OAAA;YAAAI,QAAA,EAAkBgB,QAAQ,CAACP,MAAM;UAAC,GAAzBS,MAAM;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwB,CACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA,GAhBOI,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBX,CAAC;IAAA,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACc,EAAA,GA1BItB,aAA2C;AA4BjD,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}